{
  "swagger": "2.0",
  "info": {
    "description": " <p> <strong>Welcome to MetroHero's public API documentation!</strong> Here you can browse the APIs we currently offer and even give them a try for yourself right from within your web browser. If you have any comments, questions, suggestions or concerns, please email us at <a href='mailto:contact@dcmetrohero.com' target='_blank'>contact@dcmetrohero.com</a>. </p> <p> All of our public APIs are available for free. In return, we require the following: </p> <ul> <li>You must abide by <a href='https://developer.wmata.com/license' target='_blank'>WMATA's Developer License Agreement</a> at all times while using our APIs; by using our APIs, you agree to these terms of service, as a valid WMATA API key is required to use any of our APIs.</li> <li>The data returned by our APIs or derived from data returned by our APIs must be available to everyone. If your website or app, for example, is behind a paywall, that's fine as long as there is a free tier, and that free tier has access to the same data returned by or derived from these APIs that your paying customers do.</li> <li>Any data returned by our APIs or derived from data returned by our APIs must be credited back to MetroHero. If this data is being displayed to users, e.g. on a website or in an app, MetroHero must always be visually credited wherever and whenever the data appears or is used.</li> </ul> <p> Repeat offenders of the above requirements will have their access revoked to our APIs. For legal reasons, we withhold the right to do this for any reason at any time, and make no guarantees about the availability of our APIs or the validity of the data returned by our APIs in general. For more information, see <a href='https://developer.wmata.com/license' target='_blank'>WMATA's Developer License Agreement</a>. </p> <p> A WMATA developer account is required to obtain a WMATA API key, which all of our APIs require. If you do not already have an account, you can create one <a href='https://developer.wmata.com/signup/' target='_blank'>here</a>. In doing so, you agree to <a href='https://developer.wmata.com/license' target='_blank'>WMATA's Developer License Agreement</a>. Each time you make a request to one of our APIs, the API key you specify will be validated by WMATA's servers. If validation is successful, data will be returned, otherwise no data will be returned. </p> ",
    "version": "v1",
    "title": "MetroHero APIs",
    "termsOfService": "https://developer.wmata.com/license",
    "contact": {
      "email": "contact@dcmetrohero.com"
    }
  },
  "host": "dcmetrohero.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/metrorail/trip/{fromStationCode}/{toStationCode}": {
      "get": {
        "tags": [
          "metrorail"
        ],
        "summary": "Gets real-time trip info",
        "description": " Gets real-time trip information given current conditions. The algorithms behind this API take, when available, both current conditions and conditions in the recent past into account--including any train delays and congestion--to make predictions about how long riders may be waiting or have been waiting for the next train to service the specified trip, as well as how long the trip might take once they're aboard. These predictions are recalculated about every 30 seconds. <br/><br/> **Trips with station transfers are not directly supported.** For example, to get trip information from Glenmont to Vienna, split the trip up into segments (e.g. Glenmont to Metro Center, then Metro Center to Vienna) and perform a separate request to this API for each segment. You can then aggregate the results across the responses of each API request however you see fit to make your own derived predictions about the trip as a whole. ",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "Your WMATA API key. You will need to sign up [here](https://developer.wmata.com/signup/) if you do not already have a WMATA developer account to obtain an API key. This key will be validated against WMATA's servers for validity and authorization each time a request is made to this API. If the key fails validation or validation is temporarily unavailable, this API will not return any data.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromStationCode",
            "in": "path",
            "description": "The RTU station code of the originating station of the trip. For example, if you want to request trip info for the trip from Vienna (K08) to Metro Center (C01), you should specify K08 for this param. An unofficial list of valid Metrorail station codes can be found [here](https://docs.google.com/spreadsheets/d/13Kz-v3Yjn6ork9vXyl8KLSgzf7KYuGNP9d7HPMd-Kzc/pub?hl=en&single=true&gid=0&output=html), though only codes for revenue stations are supported.",
            "required": true,
            "type": "string"
          },
          {
            "name": "toStationCode",
            "in": "path",
            "description": "The RTU station code of the destination station of the trip. For example, if you want to request trip info for the trip from Vienna (K08) to Metro Center (C01), you should specify C01 for this param. An unofficial list of valid Metrorail station codes can be found [here](https://docs.google.com/spreadsheets/d/13Kz-v3Yjn6ork9vXyl8KLSgzf7KYuGNP9d7HPMd-Kzc/pub?hl=en&single=true&gid=0&output=html), though only codes for revenue stations are supported.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip info successfully retrieved",
            "schema": {
              "$ref": "#/definitions/TripInfo"
            }
          },
          "400": {
            "description": "Invalid request. Make sure all required params and the apiKey header are specified and are valid. Also make sure the trip you specified doesn't involve a transfer. If it does, refer to the description of this API to learn how to handle this case."
          },
          "401": {
            "description": "The WMATA API key you specified was invalid or rejected, or our servers were unable to validate your WMATA API key. If you're sure the key you specified is valid and active, there may be a problem with our servers and/or WMATA's servers, in which case you should try again later."
          },
          "503": {
            "description": "You specified a valid request, but our servers aren't yet ready to accept it. This can happen if our servers have restarted recently. Please try again soon."
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "apiKey",
      "in": "header"
    }
  },
  "definitions": {
    "TripInfo": {
      "type": "object",
      "properties": {
        "fromStationName": {
          "type": "string",
          "description": "The name of the originating station (i.e. fromStation) of the trip."
        },
        "fromStationCode": {
          "type": "string",
          "description": "The RTU station code of the originating station (i.e. fromStation) of the trip."
        },
        "toStationName": {
          "type": "string",
          "description": "The name of the destination station (i.e. toStation) of the trip."
        },
        "toStationCode": {
          "type": "string",
          "description": "The RTU station code of the destination station (i.e. toStation) of the trip."
        },
        "idealTripTime": {
          "type": "integer",
          "format": "int32",
          "description": "How long the trip is normally expected to take given slightly-less-than-ideal conditions."
        },
        "predictedTripTime": {
          "type": "integer",
          "format": "int32",
          "description": "Predicted trip time once a rider is aboard the next train to service this trip, based on current conditions and/or conditions in the recent past."
        },
        "averageWaitTime": {
          "type": "integer",
          "format": "int32",
          "description": "Average predicted wait time for riders waiting on fromStation's platform for the next train to service this trip, based on current conditions and/or conditions in the recent past, and assuming the arrival of riders to fromStation's platform is normally distributed."
        }
      }
    }
  }
}